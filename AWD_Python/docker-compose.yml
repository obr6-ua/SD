version: '3'
services:
  clima:
    build:
      context: .
      dockerfile: Clima.DockerFile
    environment:
      PUERTO: 3000
    container_name: clima
    working_dir: /opt/Clima
    command: python3 AA_Weather.py

  engine:
    build:
      context: .
      dockerfile: Engine.DockerFile
    ports:
      - "3001:3001"
    container_name: engine
    command: sleep infinity
    environment:
      IP_BBDD: 172.27.254.207
      IP_CLIMA: 172.27.254.207
      IP_SERVER_GESTOR: 172.27.254.207
      IP_ENGINE: 172.27.254.207
      PUERTO_SERVER_GESTOR: 9092
      PUERTO_ESCUCHA: 3001
      PUERTO_BBDD: 27017
      PUERTO_CLIMA: 3000
      TOPIC_CONSUMIDOR: "drones_engine"
      TOPIC_PRODUCTOR: "engine_drones"
      
  registry:
    build:
      context: .
      dockerfile: Registry.DockerFile
    ports:
      - "3002:3002"
    command: sleep infinity
    environment:
      IP_REGISTRY: 0.0.0.0
      PORT_BBDD: 27017
      PORT_REGISTRY: 3002
    container_name: registry

  mongo:
    image: mongo
    ports:
      - "27017:27017"
    container_name: mongo

  drone:
    build:
      context: .
      dockerfile: Drone.DockerFile
    environment:
      IP: 172.27.254.207
      PORT_ENGINE: 3001
      PORT: 3002
    command: python opt/Drone/AD_Drone.py
    container_name: dron
  
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    container_name: zoo
    
  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

    container_name: kafka
    depends_on:
      - zookeeper

